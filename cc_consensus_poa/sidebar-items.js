initSidebarItems({"constant":[["POA_ENGINE_ID","The engine id for the Proof of Access consensus."]],"enum":[["Error","Error type for poa consensus."],["PoaOutcome","This struct represents the outcome of creating the inherent data of [`ProofOfAccess`]."]],"fn":[["build_extrinsic_proof","Returns the calculated merkle proof given `extrinsic_index` and `extrinsics_root`."],["calculate_challenge_byte","Returns the position of recall byte in the entire weave."],["construct_poa","Returns a [`PoaOutcome`] after the poa construction."],["verify_chunk_proof","Verifies the chunk matches given the `chunk_root` and `proof`."],["verify_extrinsic_proof","Verify the extrinsic proof on the extrinsics root and related encoded extrinsic."]],"struct":[["ChunkProof","This struct includes the raw bytes of recall chunk as well as the chunk proof stuffs."],["ChunkProofBuilder","A builder for creating a [`ChunkProof`] from the raw transaction data."],["ChunkProofVerifier","A verifier for chunk proof."],["PoaBuilder","A builder for creating [`PoaOutcome`]."],["PoaConfiguration","Configuration of the PoA consensus engine."],["PoaInherentDataProvider","A type for creating the inherent data for pallet poa."],["ProofOfAccess","This struct is used to prove the random historical data access of block author."],["PurePoaBlockImport","A pure block importer for PoA."],["RecallInfo","All information of recall block that is required to build a [`ProofOfAccess`]."],["TxProofVerifier","A verifier for tx proof."]]});