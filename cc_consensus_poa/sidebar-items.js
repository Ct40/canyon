initSidebarItems({"constant":[["MAX_CHUNK_PATH","Maximum byte size of chunk merkle path."],["MAX_DEPTH","The maximum depth of attempting to generate a valid PoA."],["MAX_TX_PATH","Maximum byte size of transaction merkle path."]],"enum":[["Error","Error type for poa consensus."]],"fn":[["build_extrinsic_proof","Returns the calculated merkle proof given `extrinsic_index` and `extrinsics_root`."],["calculate_challenge_byte","Returns the position of recall byte in the entire weave."],["construct_poa","Returns a [`PoaOutcome`] after the poa construction."],["verify_chunk_proof","Verifies the chunk matches given the `chunk_root` and `proof`."],["verify_extrinsic_proof","Verify the extrinsic proof on the extrinsics root and related encoded extrinsic."]],"struct":[["ChunkProofBuilder","A builder for creating a [`ChunkProof`] from the raw transaction data."],["ChunkProofVerifier","A verifier for chunk proof."],["PoaBuilder","A builder for creating [`PoaOutcome`]."],["PoaInherentDataProvider","A type for creating the inherent data for pallet poa."],["PurePoaBlockImport","A pure block importer for PoA."],["RecallInfo","All information of recall block that is required to build a [`ProofOfAccess`]."],["TxProofVerifier","A verifier for tx proof."]]});